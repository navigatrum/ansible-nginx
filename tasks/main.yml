---

- name: Install apt requirements
  become: 'yes'
  apt:
    name: "{{ packages }}"
    update_cache: true
  vars:
    packages:
      - build-essential
      - zlib1g-dev
      - libpcre3
      - libpcre3-dev
      - unzip
      - uuid-dev

- name: create build path
  become: 'yes'
  file: state=directory
        path={{ nginx_build_dir }}
        owner={{ ansible_user_id }}
        group={{ ansible_user_id }}

- block:

    - name: check nginx pagespeed directory
      stat: path={{ nginx_build_dir }}/{{ nginx_pagespeed_url|basename }}
      register: nginx_pagespeed_module

    - name: Download nginx pagespeed module
      get_url: url={{ nginx_pagespeed_url }}
               dest={{ nginx_build_dir }}
               mode=0440

      when: not nginx_pagespeed_module.stat.exists
      register: nginx_pagespeed_module_dl

    - name: unpack nginx pagespeed module
      unarchive: copy=no
                 dest={{ nginx_build_dir }}/
                 src={{ nginx_pagespeed_module_dl.dest }}
      when: nginx_pagespeed_module_dl.changed
      register: nginx_pagespeed_module_unpack

    - name: check nginx psol directory
      stat: path={{ nginx_build_dir }}/{{ nginx_psol_url|basename }}
      register: nginx_psol

    - name: download pagespeed library
      get_url: url={{ nginx_psol_url }}
               dest={{ nginx_build_dir }}

      when: not nginx_psol.stat.exists
      register: nginx_psol_dl

    - name: unpack pagespeed library
      unarchive: copy=no
                 dest={{ nginx_pagespeed_build_dir }}
                 src={{ nginx_psol_dl.dest }}
      when: nginx_psol_dl.changed
      register: nginx_psol_unpack

  when: nginx_pagespeed_enabled

- name: check nginx build directory
  stat: path={{ nginx_build_dir }}/{{ nginx_url|basename }}
  register: nginx_source

- name: Download nginx
  get_url: url={{ nginx_url }}
           dest={{ nginx_build_dir }}
  register: nginx_source_dl
  when: not nginx_source.stat.exists

- name: Unpack Nginx
  unarchive: copy=no
             dest={{ nginx_build_dir }}
             src={{ nginx_source_dl.dest }}
  when: nginx_source_dl.changed
  register: nginx_source_unpack
  tags:
    - skip_ansible_lint

- name: Configure Nginx source (pagespeed)
  command: ./configure {{ nginx_build_options_defaults|combine(nginx_build_options)|dict2opts }} --add-module={{ nginx_pagespeed_build_dir }} --with-cc-opt='-g -O2 -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -D_FORTIFY_SOURCE=2' --with-ld-opt='-Wl,-Bsymbolic-functions -Wl,-z,relro'
           chdir={{ nginx_build_dir }}/nginx-{{ nginx_version }}
  when: nginx_pagespeed_enabled and
        (nginx_pagespeed_module_unpack is changed or
        nginx_psol_unpack is changed or
        nginx_source_unpack is changed)
  register: nginx_configure_pagespeed

- name: Configure Nginx source
  command: ./configure {{ nginx_build_options_defaults|combine(nginx_build_options)|dict2opts }} --with-cc-opt='-g -O2 -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -D_FORTIFY_SOURCE=2' --with-ld-opt='-Wl,-Bsymbolic-functions -Wl,-z,relro'
           chdir={{ nginx_build_dir }}/nginx-{{ nginx_version }}
  when: not nginx_pagespeed_enabled and
        nginx_source_unpack is changed
  register: nginx_configure

- name: Install Nginx
  become: 'yes'
  shell: make && make install
         chdir={{ nginx_build_dir }}/nginx-{{ nginx_version }}
  when: nginx_configure is changed or nginx_configure_pagespeed is changed
  notify:
    - restart nginx
    - restart nginx - xenial

- name: Install Nginx init script
  become: 'yes'
  template: src=nginx.init
            dest=/etc/init.d/nginx
            mode=0755

- name: Create required nginx dirs
  become: 'yes'
  file: path={{ item }}
        state=directory
  with_items:
    - /etc/nginx
    - /var/lib/nginx

- name: Configure Nginx
  become: 'yes'
  template: src=nginx.conf dest=/etc/nginx/nginx.conf
  notify:
    - reload nginx
    - reload nginx - xenial

- name: Configure Nginx init (systemd)
  become: 'yes'
  template: src=nginx.service dest=/lib/systemd/system/nginx.service
  when: ansible_distribution_release == 'xenial'

- name: Create sites-enabled
  become: 'yes'
  file: state=directory
        path=/etc/nginx/sites-enabled
